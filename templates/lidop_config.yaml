---
# online, offline
install_mode: online
nodes: 0
# self, letsencrypt
certificate_creation: self
# lidop.local, xip.io, mydomain.xyz
domain_name: www.{{ public_ipaddress }}.nip.io
# http, https
protocol: https
# latest, dev
docker_image_version: latest

nginx_image: livingdevops/lidop.nginx:{{ docker_image_version }}
jenkins_image: livingdevops/lidop.jenkins:{{ docker_image_version }}
jenkins_slave_image: livingdevops/lidop.jenkins-slave:{{ docker_image_version }}
jenkins_docker_slave_image: livingdevops/lidop.jenkins-slave-docker:{{ docker_image_version }}
gitbucket_image: livingdevops/lidop.gitbucket:{{ docker_image_version }}
backup_image: livingdevops/lidop.backup:{{ docker_image_version }}
serverspec_image: livingdevops/lidop.serverspec:{{ docker_image_version }}

plugins_to_load: 
  - "Environment" 
  - "LiDOPCloud" 

ldap_use_external_server: false
ldap_server: ldap.service.lidop.local
ldap_base_dn: dc=lidop,dc=local

ldap_needs_authentication: true
ldap_bind_dn: cn=admin,dc=lidop,dc=local
ldap_bind_password: "{{ secret_password }}"

ldap_fullname_attribute: givenName
ldap_username_attribute: uid
ldap_mail_address_attribute: mail

ldap_user_search_attribute: uid
ldap_user_search_object_class: inetOrgPerson
ldap_group_search_attribute: memberUid
ldap_group_search_object_class: posixGroup

ldap_lidop_admin_group_query: cn=admins,ou=groups,dc=lidop,dc=local
ldap_lidop_admin_group_name: admins

# some user values. you can also use vault encrypted variables (use the same password as you use for lidop)
dummy: value

# all itmes under secrets will be imported in kenkins as secure string
#secrets: 
  #aws_access_key: !vault |
  #  $ANSIBLE_VAULT;1.1;AES256
  #  7598472547598247589475829437589475893724895734985729834798753

# all itmes under secrets will be imported in kenkins as ssh keys
# certificates:
#   username: !vault |
#     $ANSIBLE_VAULT;1.1;AES256
#     64643130646264343436386364643466613965356230353131633738643732323538356361623835
