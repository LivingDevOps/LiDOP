---

########################################################################
- name: Start consul
########################################################################
  block:

  - name: Create folders
    file:
      state: "directory"
      path: "/var/lidop/{{ item }}"
      owner: "{{ root_user }}"
      group: "{{ root_user }}"
      mode: '0775'
    with_items:
      - consul/data
    when: node == "master"

  - name: start consul server
    shell: docker service rm consul_master
    ignore_errors: yes
    when: node == "master"

  - name: start consul server
    shell: >
      docker service create -d \
      --network host \
      --mode global \
      -e 'CONSUL_ALLOW_PRIVILEGED_PORTS=' \
      --mount type=bind,source=/var/lidop/consul/data,destination=/var/lidop/consul/data \
      --mount type=bind,source=/var/lidop/consul/config.server,destination=/consul/config \
      --constraint 'node.role == manager' \
      --name consul_master \
      consul:latest agent
    when: node == "master"

  - name: remove consul server
    shell: docker service rm consul_node
    ignore_errors: yes
    when: node == "master"

  - name: remove consul node
    shell: docker rm -f consul_node
    ignore_errors: yes
    when: node == "worker"

  - name: start consul node
    shell: >
      docker run -d \
      --name=consul_node \
      -e 'CONSUL_ALLOW_PRIVILEGED_PORTS=' \
      -v /var/lidop/consul/config.node:/consul/config \
      --net=host \
      --restart always \
      consul:latest \
      agent -bind={{ ipaddress }} -advertise={{ ipaddress }} -client={{ ipaddress }}
    when: node == "worker"

  - name: start registrator server
    shell: docker rm -f consul_registrator
    ignore_errors: yes
    
  - name: start registrator server
    shell: >
      docker run -d \
      --net=host \
      -v /var/run/docker.sock:/tmp/docker.sock \
      -v /etc/hosts:/etc/hosts \
      --name consul_registrator \
      -e CONSUL_HTTP_TOKEN={{ secret_password }} \
      --restart always \
      gliderlabs/registrator:latest -ip={{ ipaddress }} -cleanup=true -deregister="always" -resync=60 consul://{{ ipaddress }}:8500

  - name: "wait for consul to come up"
    uri:
      url: "http://{{ ipaddress }}:8500/v1/acl/policy"
      status_code: 405
    register: result
    until: result.status == 405
    retries: 100
    delay: 5
    when: node == "master"

  # HACK. Better way needed to check when consul is fully up and acl is ready
  - pause:
      seconds: 10

  - name: Create dns policy
    uri:
      method: PUT
      status_code: 200
      url: 'http://{{ ipaddress }}:8500/v1/acl/policy'
      timeout: 120
      force_basic_auth: yes
      headers:
        X-Consul-Token: "{{ secret_password }}"
      body: |
        {
          "Name": "dns",
          "Description": "grant access to use dns",
          "Rules": "node_prefix \"\" { policy = \"read\" } service_prefix \"\" { policy = \"read\" }"
        }
    when: node == "master"

  - name: Create kv policy
    uri:
      method: PUT
      status_code: 200
      url: 'http://{{ ipaddress }}:8500/v1/acl/policy'
      timeout: 120
      force_basic_auth: yes
      headers:
        X-Consul-Token: "{{ secret_password }}"
      body: |
        {
          "Name": "kv",
          "Description": "grant access to use kv",
          "Rules": "key_prefix \"\" { policy = \"read\" } key_prefix \"lidop\" { policy = \"deny\" }"
        }
    when: node == "master"


  - name: add policies to anonym token
    uri:
      method: PUT
      status_code: 200
      url: 'http://{{ ipaddress }}:8500/v1/acl/token/00000000-0000-0000-0000-000000000002'
      timeout: 120
      force_basic_auth: yes
      headers:
        X-Consul-Token: "{{ secret_password }}"
      body: |
        { 
          "Policies": [ { "Name": "dns" }, { "Name": "kv" } ], 
          "Local": false 
        }

  - name: wait for consul registering
    shell: docker run --rm --dns {{ ipaddress }} alpine:latest ping -c 1 consul.service.lidop.local
    register: result
    until: result.rc == 0
    retries: 100
    delay: 5

  tags: consul
