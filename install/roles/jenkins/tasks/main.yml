---

- name: setup jenkins
  block:

  - name: pull image
    shell: "docker pull livingdevops/lidop.jenkins:{{ docker_image_version }}"
    when: 
      - install_mode == "online"
      - node == "master"

  - name: tag image
    shell: "docker tag livingdevops/lidop.jenkins:{{ docker_image_version }} registry.service.lidop.local:5000/lidop/jenkins:{{ docker_image_version }}"
    when: node == "master"

  - name: start jenkins
    shell: docker stack deploy -c /var/lidop/templates/jenkins.yml jenkins
          
  - name: "wait for Jenkins to come up"
    uri:
      url: "http://{{ ipaddress }}:8080/jenkins"
      status_code: 403
    register: result
    until: result.status == 403
    retries: 100
    delay: 5

  - name: Create Credentials Crumb
    uri:
      url: 'http://{{ ipaddress }}:8080/jenkins/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      timeout: 120
      force_basic_auth: yes
      return_content: yes
    register: crumb

  - name: Create lidop Credentials in Jenkins
    uri:
      method: POST
      status_code: 302
      url: 'http://{{ ipaddress }}:8080/jenkins/credentials/store/system/domain/_/createCredentials'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      timeout: 120
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      body: |
        json={
          "": "0",
          "credentials": {
            "scope": "GLOBAL",
            "id": "lidop",
            "username": "{{ root_user }}",
            "password": "{{ root_password }}",
            "description": "lidop",
            "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
          }
        }

  - name: Create secret_password Credentials in Jenkins
    uri:
      method: POST
      status_code: 302
      url: 'http://{{ ipaddress }}:8080/jenkins/credentials/store/system/domain/_/createCredentials'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      timeout: 120
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      body: |
        json={
          "": "0",
          "credentials": {
            "scope": "GLOBAL",
            "id": "lidop_secret_password",
            "username": "{{ root_user }}",
            "password": "{{ secret_password }}",
            "description": "lidop_secret_password",
            "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
          }
        }

  - name: Create Secrets in Jenkins
    uri:
      method: POST
      status_code: 302
      url: 'http://{{ ipaddress }}:8080/jenkins/credentials/store/system/domain/_/createCredentials'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      body: |
        json={
          "": "0",
          "credentials": {
            "scope": "GLOBAL",
            "id": "{{ item }}",
            "secret": "{{ secrets[item]|urlencode() }}",
            "description": "{{ item }}",
            "$class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
          }
        }
    with_items: "{{ secrets }}"
    when: secrets is defined

  - name: Create SSHCertificate Credential in Jenkins
    uri:
      method: POST
      status_code: 302
      url: 'http://{{ ipaddress }}:8080/jenkins/credentials/store/system/domain/_/createCredentials'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      body: |
        json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "{{ item }}",
          "username": "{{ item }}",
          "password": "",
          "privateKeySource": {
            "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$DirectEntryPrivateKeySource",
            "privateKey": "{{ certificates[item] | regex_replace('\n','\\n') | replace('+','%2B')  }}"
          },
          "description": "Pascal.Lauener",
          "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey"
          }
        }
    with_items: "{{ certificates }}"
    when: certificates is defined

  - name: pull image
    shell: "docker pull livingdevops/lidop.{{ item }}:{{ docker_image_version }}"
    when: 
      - install_mode == "online"
      - node == "master"
    with_items:
      - jenkins-slave-docker
      - jenkins-slave

  - name: tag image
    shell: "docker tag livingdevops/lidop.{{ item }}:{{ docker_image_version }} registry.service.lidop.local:5000/lidop/{{ item }}:{{ docker_image_version }}"
    when: node == "master"
    with_items:
      - jenkins-slave-docker
      - jenkins-slave

  - name: push image
    shell: "docker push registry.service.lidop.local:5000/lidop/{{ item }}:{{ docker_image_version }}"
    when: node == "master"
    with_items:
      - jenkins-slave-docker
      - jenkins-slave

  tags: jenkins